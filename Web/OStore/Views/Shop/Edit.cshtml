@using System.Text
@using OStore.Models
@using OStore.Providers
@model OStore.Models.ShopModel

@{
    ViewBag.Title = GlobalResources.StringResource.Shop_Edit_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-lg-12">
    <h1 class="page-header">@ViewBag.Title</h1>
</div>

<ul class="nav nav-tabs">
    <li role="presentation" class="active"><a href="#detail" data-toggle="tab">@GlobalResources.StringResource.Shop_Edit_TabDetail</a></li>
    <li role="presentation"><a href="#about" data-toggle="tab">@GlobalResources.StringResource.Shop_Edit_TabAbout</a></li>
    <li role="presentation"><a href="#faqs" data-toggle="tab">@GlobalResources.StringResource.Shop_Edit_TabFAQs</a></li>
</ul>
@functions
{
    private string GenerateNavigationTabs(List<TreeViewExampleModel> TreeViewExamples)
    {
        try
        {
            StringBuilder builder = new StringBuilder();

            for(int i =0;i< TreeViewExamples.Count;i++)
            {
                
                if(TreeViewExamples[i].SubCategories != null)
                {
                    
                    builder.Append(string.Format("<li>{0}{1}<ul>{2}</ul></li>", TreeViewExamples[i].Display, Html.CheckBoxFor(m => TreeViewExamples[i].Checked, new { @class = "checkbox-inline" }), GenerateNavigationTabs(TreeViewExamples[i].SubCategories)));
                }
                else
                {

                    builder.Append(string.Format("<li>{0}{1}</li>", TreeViewExamples[i].Display, Html.CheckBoxFor(m => TreeViewExamples[i].Checked, new { @class = "checkbox-inline" })));

                    

                }
            }
            //model.ForEach(m =>
            //{
            //    if (m.SubCategories!=null)
            //    {
            //        builder.Append(string.Format("<li>{0}{1}<ul>{2}</ul></li>", m.Display, @Html.CheckBox(m.Display, m.Checked, new { @class = "checkbox-inline" }), GenerateNavigationTabs(m.SubCategories)));
            //    }
            //    else
            //    {

            //        builder.Append(string.Format("<li>{0}{1}</li>", m.Display, @Html.CheckBox(m.Display, m.Checked, new {@class = "checkbox-inline"})));
            //    }
            //});
            return builder.ToString();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

}

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="detail">
        <div class="panel panel-default" style="margin-top: 12px;">
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "Shop", FormMethod.Post))
                {
                    <div class="form-horizontal" role="form">
                        <div >
                            <input type="text" value="Amsterdam,Washington,Sydney,Beijing,Cairo" data-role="tagsinput" />
                        </div>
                       
                        @* ShopName *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopName</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(c => c.ShopName, new {@class = "form-control", id="testTbx"})
                                <button type="button" onclick="copyToClipboard(document.getElementById('testTbx'))">Copy</button>
                            </div>
                        </div>
                        @* Logo *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopLogo</label>
                            <div class="col-sm-4">
                                @Html.FileUploadForm("../../Shop/SaveLogo")
                                @Html.ValidationMessageFor(model => model.Logo, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        @* Facebook *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopFB</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(c => c.FaceBookId, new { @class = "form-control" })
                            </div>
                        </div>
                        @* LINE *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopLine</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(c => c.LineId, new { @class = "form-control" })
                            </div>
                        </div>
                        @* Instagram *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopIG</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(c => c.InstagramId, new { @class = "form-control" })
                            </div>
                        </div>
                        @* Address *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopAddress</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(c => c.AddressLine01, new {@class = "form-control"})
                            </div>
                        </div>

                        <div class="form-group">
                            @* Province *@
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopProvince</label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(c => c.ProvinceId, Model.Provinces, new {@class = "form-control"})
                            </div>
                            @* District *@
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopDistrict</label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(c => c.DistrictId, Model.Districts, new {@class = "form-control"})
                            </div>
                        </div>

                        <div class="form-group">
                            @* Sub-District *@
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopSubDistrict</label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(c => c.SubDistrictId, Model.SubDistricts, new {@class = "form-control"})
                            </div>
                            @* ZipCode *@
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopZipCode</label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(c => c.PostCode, Model.PostalCodes, new {@class = "form-control"})
                            </div>
                        </div>

                        @* Telephone *@
                        <div class="form-group">
                            <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_ShopTelephone</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(c => c.Mobile, new {@class = "form-control"})
                            </div>
                        </div>
                        <div class="form-group pull-right" style="margin-top: 50px;">
                            <button class="btn btn-success" type="submit" name="command" value="Save" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnSave</button>
                            <button class="btn btn-bitbucket" type="submit" name="command" value="Cancel" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnCancel</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="about">
        <div class="panel panel-default" style="margin-top: 12px;">
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "Shop", FormMethod.Post))
                {
                <ul data-bind="kendoTreeView: {}">
                    @if (Model != null && Model.TreeViewExamples != null)
                    {
                        @Html.Raw(GenerateNavigationTabs(Model.TreeViewExamples))
                      
                    }


                </ul>



                <div class="form-horizontal" role="form">
                    @* About Us *@
                    <div class="form-group">
                        <label class="control-label col-sm-2">@GlobalResources.StringResource.Shop_Edit_AboutUs</label>
                        <div class="col-sm-10">
                            @Html.TextAreaFor(c => c.AboutUs, new {@class = "form-control", @id = "editor", rows = "6"})
                        </div>
                    </div>
                    <div class="form-group pull-right" style="margin-top: 50px;">
                        <button class="btn btn-success" type="submit" name="command" value="Save" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnSave</button>
                        <button class="btn btn-bitbucket" type="submit" name="command" value="Cancel" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnCancel</button>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="faqs">
        <div class="panel panel-default" style="margin-top: 12px;">
            <div class="panel-body">
                @using (Html.BeginForm("SaveFAQ", "Shop", FormMethod.Post))
                {
                    <div class="form-horizontal" role="form">
                     
                     
                        <div class="form-group">
                            <label class="control-label col-sm-1">Q:</label>
                            <div class="col-sm-11">
                                @Html.TextBoxFor(c => c.Faq.Question, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-1">A:</label>
                            <div class="col-sm-11">
                                @Html.TextBoxFor(c => c.Faq.Answer, new { @class = "form-control" })
                            </div>
                        </div>

                        @if (Model != null && Model.ListOfFAQs != null)
                        {
                            for (var i = 0; i < Model.ListOfFAQs.Count; i++)
                            {
                                <div class="form-group">
                                    <label class="control-label col-sm-1">Q:</label>
                                    <div class="col-sm-11">
                                        @Html.TextBoxFor(c=>c.ListOfFAQs[i].Question, new { @class = "form-control" })

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-1">A:</label>
                                    <div class="col-sm-11">
                                       @Html.TextBoxFor(c => c.ListOfFAQs[i].Answer, new { @class = "form-control" })
                                    </div>

                                </div>
                            }


                    
                        }
                        <div id="faqss"></div>
                        <div class="col-sm-offset-1">
                            <button class="btn btn-success " @*onclick="addInput('faqss');"*@ type="button" style="margin-top: 12px;"><i class="glyphicon glyphicon-plus-sign"></i>Add More</button>
                        </div>
                        <div class="form-group pull-right" style="margin-top: 50px;">
                            <button class="btn btn-success" type="submit" name="command" value="Save" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnSave</button>
                            <button class="btn btn-bitbucket" type="submit" name="command" value="Cancel" style="margin-right: 5px;">@GlobalResources.StringResource.Shop_Edit_btnCancel</button>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">

    CKEDITOR.replace('editor');

    var counter = 0;
    var limit = 10;
    var viewModel = {
        key: ko.observable(""),
        value: ko.observable(""),
        selectedItem: ko.observable()
    };

 
    ko.applyBindings(viewModel);

    function copyToClipboard(elem) {
        var target = elem;
        var origSelectionStart = elem.selectionStart;
        var  origSelectionEnd = elem.selectionEnd;
        var currentFocus = document.activeElement;
        target.focus();
        var previousValue = target.value;

        target.value = "@GlobalResources.StringResource.Common_CopyMessage " + target.value;
        target.setSelectionRange(0, target.value.length);
        
       
        var succeed;
        try {
            succeed = document.execCommand("copy");
            target.value = previousValue;
        } catch (e) {
            succeed = false;
        }
        return succeed;
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        Dropzone.options.dropzoneForm = {
            maxFiles: 1,
            init: function () {
                var myDropzone = this;
                this.on("complete", function (data) {
                    var res = JSON.parse(data.xhr.responseText);
                    console.log(res.Message);
                });
            }
        };
    </script>

}
